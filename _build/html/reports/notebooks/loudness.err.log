Traceback (most recent call last):
  File "/Users/fra/.pyenv/versions/3.12.7/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/fra/.pyenv/versions/3.12.7/lib/python3.12/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/fra/.pyenv/versions/3.12.7/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/fra/.pyenv/versions/3.12.7/lib/python3.12/asyncio/base_events.py", line 687, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/fra/.pyenv/versions/3.12.7/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/Users/fra/.pyenv/versions/3.12.7/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/fra/.pyenv/versions/3.12.7/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import torch
import torchaudio

def pre_filter(audio, sample_rate):
    # Apply pre-filtering as required by the EBU R128 standard
    # This might involve specific filtering operations to mimic the human ear's response
    pass

def rlb_filter(audio, sample_rate):
    # Apply the RLB (Revised Low Frequency) weighting filter
    # This is part of the EBU R128 standard for loudness measurement
    pass

def power_mean_square(audio, frame_size, hop_size):
    # Calculate the mean square power of the audio signal
    # This involves squaring the signal and averaging it over specific frame sizes
    pass

def gain(audio):
    # Apply necessary gain adjustments as per the loudness calculation requirements
    pass

def sum_loudness(audio):
    # Sum the loudness across all frames to get the overall loudness measurement
    pass

# Load audio
audio, sample_rate = torchaudio.load('./audio/IR_AKG_BX25_3500ms_48kHz24b.wav')

# Pre-filter
audio = pre_filter(audio, sample_rate)

# RLB filter
audio = rlb_filter(audio, sample_rate)

# Power mean square
frame_size = int(sample_rate * 0.4)  # Example for 400ms window
hop_size = int(sample_rate * 0.1)    # Example hop size
audio = power_mean_square(audio, frame_size, hop_size)

# Gain
audio = gain(audio)

# Sum
loudness_metrics = sum_loudness(audio)

print(loudness_metrics)

------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mLibsndfileError[0m                           Traceback (most recent call last)
Cell [0;32mIn[1], line 28[0m
[1;32m     25[0m     [38;5;28;01mpass[39;00m
[1;32m     27[0m [38;5;66;03m# Load audio[39;00m
[0;32m---> 28[0m audio, sample_rate [38;5;241m=[39m [43mtorchaudio[49m[38;5;241;43m.[39;49m[43mload[49m[43m([49m[38;5;124;43m'[39;49m[38;5;124;43m./audio/IR_AKG_BX25_3500ms_48kHz24b.wav[39;49m[38;5;124;43m'[39;49m[43m)[49m
[1;32m     30[0m [38;5;66;03m# Pre-filter[39;00m
[1;32m     31[0m audio [38;5;241m=[39m pre_filter(audio, sample_rate)

File [0;32m~/.pyenv/versions/3.12.7/lib/python3.12/site-packages/torchaudio/_backend/utils.py:205[0m, in [0;36mget_load_func.<locals>.load[0;34m(uri, frame_offset, num_frames, normalize, channels_first, format, buffer_size, backend)[0m
[1;32m    128[0m [38;5;250m[39m[38;5;124;03m"""Load audio data from source.[39;00m
[1;32m    129[0m 
[1;32m    130[0m [38;5;124;03mBy default (``normalize=True``, ``channels_first=True``), this function returns Tensor with[39;00m
[0;32m   (...)[0m
[1;32m    202[0m [38;5;124;03m        `[channel, time]` else `[time, channel]`.[39;00m
[1;32m    203[0m [38;5;124;03m"""[39;00m
[1;32m    204[0m backend [38;5;241m=[39m dispatcher(uri, [38;5;28mformat[39m, backend)
[0;32m--> 205[0m [38;5;28;01mreturn[39;00m [43mbackend[49m[38;5;241;43m.[39;49m[43mload[49m[43m([49m[43muri[49m[43m,[49m[43m [49m[43mframe_offset[49m[43m,[49m[43m [49m[43mnum_frames[49m[43m,[49m[43m [49m[43mnormalize[49m[43m,[49m[43m [49m[43mchannels_first[49m[43m,[49m[43m [49m[38;5;28;43mformat[39;49m[43m,[49m[43m [49m[43mbuffer_size[49m[43m)[49m

File [0;32m~/.pyenv/versions/3.12.7/lib/python3.12/site-packages/torchaudio/_backend/soundfile.py:27[0m, in [0;36mSoundfileBackend.load[0;34m(uri, frame_offset, num_frames, normalize, channels_first, format, buffer_size)[0m
[1;32m     17[0m [38;5;129m@staticmethod[39m
[1;32m     18[0m [38;5;28;01mdef[39;00m [38;5;21mload[39m(
[1;32m     19[0m     uri: Union[BinaryIO, [38;5;28mstr[39m, os[38;5;241m.[39mPathLike],
[0;32m   (...)[0m
[1;32m     25[0m     buffer_size: [38;5;28mint[39m [38;5;241m=[39m [38;5;241m4096[39m,
[1;32m     26[0m ) [38;5;241m-[39m[38;5;241m>[39m Tuple[torch[38;5;241m.[39mTensor, [38;5;28mint[39m]:
[0;32m---> 27[0m     [38;5;28;01mreturn[39;00m [43msoundfile_backend[49m[38;5;241;43m.[39;49m[43mload[49m[43m([49m[43muri[49m[43m,[49m[43m [49m[43mframe_offset[49m[43m,[49m[43m [49m[43mnum_frames[49m[43m,[49m[43m [49m[43mnormalize[49m[43m,[49m[43m [49m[43mchannels_first[49m[43m,[49m[43m [49m[38;5;28;43mformat[39;49m[43m)[49m

File [0;32m~/.pyenv/versions/3.12.7/lib/python3.12/site-packages/torchaudio/_backend/soundfile_backend.py:221[0m, in [0;36mload[0;34m(filepath, frame_offset, num_frames, normalize, channels_first, format)[0m
[1;32m    139[0m [38;5;129m@_requires_soundfile[39m
[1;32m    140[0m [38;5;28;01mdef[39;00m [38;5;21mload[39m(
[1;32m    141[0m     filepath: [38;5;28mstr[39m,
[0;32m   (...)[0m
[1;32m    146[0m     [38;5;28mformat[39m: Optional[[38;5;28mstr[39m] [38;5;241m=[39m [38;5;28;01mNone[39;00m,
[1;32m    147[0m ) [38;5;241m-[39m[38;5;241m>[39m Tuple[torch[38;5;241m.[39mTensor, [38;5;28mint[39m]:
[1;32m    148[0m [38;5;250m    [39m[38;5;124;03m"""Load audio data from file.[39;00m
[1;32m    149[0m 
[1;32m    150[0m [38;5;124;03m    Note:[39;00m
[0;32m   (...)[0m
[1;32m    219[0m [38;5;124;03m            `[channel, time]` else `[time, channel]`.[39;00m
[1;32m    220[0m [38;5;124;03m    """[39;00m
[0;32m--> 221[0m     [38;5;28;01mwith[39;00m [43msoundfile[49m[38;5;241;43m.[39;49m[43mSoundFile[49m[43m([49m[43mfilepath[49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43mr[39;49m[38;5;124;43m"[39;49m[43m)[49m [38;5;28;01mas[39;00m file_:
[1;32m    222[0m         [38;5;28;01mif[39;00m file_[38;5;241m.[39mformat [38;5;241m!=[39m [38;5;124m"[39m[38;5;124mWAV[39m[38;5;124m"[39m [38;5;129;01mor[39;00m normalize:
[1;32m    223[0m             dtype [38;5;241m=[39m [38;5;124m"[39m[38;5;124mfloat32[39m[38;5;124m"[39m

File [0;32m~/.pyenv/versions/3.12.7/lib/python3.12/site-packages/soundfile.py:658[0m, in [0;36mSoundFile.__init__[0;34m(self, file, mode, samplerate, channels, subtype, endian, format, closefd)[0m
[1;32m    655[0m [38;5;28mself[39m[38;5;241m.[39m_mode [38;5;241m=[39m mode
[1;32m    656[0m [38;5;28mself[39m[38;5;241m.[39m_info [38;5;241m=[39m _create_info_struct(file, mode, samplerate, channels,
[1;32m    657[0m                                  [38;5;28mformat[39m, subtype, endian)
[0;32m--> 658[0m [38;5;28mself[39m[38;5;241m.[39m_file [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_open[49m[43m([49m[43mfile[49m[43m,[49m[43m [49m[43mmode_int[49m[43m,[49m[43m [49m[43mclosefd[49m[43m)[49m
[1;32m    659[0m [38;5;28;01mif[39;00m [38;5;28mset[39m(mode)[38;5;241m.[39missuperset([38;5;124m'[39m[38;5;124mr+[39m[38;5;124m'[39m) [38;5;129;01mand[39;00m [38;5;28mself[39m[38;5;241m.[39mseekable():
[1;32m    660[0m     [38;5;66;03m# Move write position to 0 (like in Python file objects)[39;00m
[1;32m    661[0m     [38;5;28mself[39m[38;5;241m.[39mseek([38;5;241m0[39m)

File [0;32m~/.pyenv/versions/3.12.7/lib/python3.12/site-packages/soundfile.py:1216[0m, in [0;36mSoundFile._open[0;34m(self, file, mode_int, closefd)[0m
[1;32m   1213[0m [38;5;28;01mif[39;00m file_ptr [38;5;241m==[39m _ffi[38;5;241m.[39mNULL:
[1;32m   1214[0m     [38;5;66;03m# get the actual error code[39;00m
[1;32m   1215[0m     err [38;5;241m=[39m _snd[38;5;241m.[39msf_error(file_ptr)
[0;32m-> 1216[0m     [38;5;28;01mraise[39;00m LibsndfileError(err, prefix[38;5;241m=[39m[38;5;124m"[39m[38;5;124mError opening [39m[38;5;132;01m{0!r}[39;00m[38;5;124m: [39m[38;5;124m"[39m[38;5;241m.[39mformat([38;5;28mself[39m[38;5;241m.[39mname))
[1;32m   1217[0m [38;5;28;01mif[39;00m mode_int [38;5;241m==[39m _snd[38;5;241m.[39mSFM_WRITE:
[1;32m   1218[0m     [38;5;66;03m# Due to a bug in libsndfile version <= 1.0.25, frames != 0[39;00m
[1;32m   1219[0m     [38;5;66;03m# when opening a named pipe in SFM_WRITE mode.[39;00m
[1;32m   1220[0m     [38;5;66;03m# See http://github.com/erikd/libsndfile/issues/77.[39;00m
[1;32m   1221[0m     [38;5;28mself[39m[38;5;241m.[39m_info[38;5;241m.[39mframes [38;5;241m=[39m [38;5;241m0[39m

[0;31mLibsndfileError[0m: Error opening './audio/IR_AKG_BX25_3500ms_48kHz24b.wav': System error.

